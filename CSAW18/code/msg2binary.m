function msg2binary(msg,error)
Key={'null','null','null','null','null','null','null','null','null','00101101111000010','01110','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','null','111','11000000','101100000','10110000100','10110001100011001','00101101111000011','1011000110001101','001011010','001000101101','001000101100','001000101111','1011000110001111','101111','0010111','0010000','0010110110000','001011011001','11000011100','110000111011','101100011001','1011000110000','0010110111111','0010110111101','0010110110001','1100001110101','0010110111010','0010001010','00100101','001011011101100','001011011110001','001011011110010','00101101101','10110001100011000','11000110','110001111','1100001111','101001010','00100100','101100010','101001011','00100011','11000010','001000101110','1011000111','101001001','00101100','110000110','110001110','110000010','0010110111110','101001110','10100110','1000001','1010011111','1010011110','110000011','001011011100','1011000011','001011011101110','10110000101','001011011101101','10110001101','001011011110011','1011000110001110','0010110111100000','0101','1011001','101010','01111','1101','101101','101011','0000','0011','101001000','0010011','10001','101000','0100','0110','1100010','0010001001','11001','0001','1001','101110','1000000','100001','0010001000','001010','1100001110100','101100011000100','101100011000101','001011011101111','null','null'};
value=[1:128];
M = containers.Map(Key,value);
l=0;n=0;value='';
for i=1:length(msg)
    bin(i)=Key(double(msg(i))+1);
    value=strcat(value,bin(i));
    l=l+length(bin{i});
    n=n+ceil(length(bin{i})/2)*3; % Total bits = no. of packets * 3 bits
    %     fprintf('\nerror:%d  %s : %s %s',xor(strcmp(bin{i},error{i}),1),msg(i),bin{i},error{i});
end
fprintf('\n Data bits Length = %d',l);
fprintf('\nTotal bits = %d',n);
value
end